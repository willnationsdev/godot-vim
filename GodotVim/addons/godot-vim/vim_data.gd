extends Reference
class_name VimData

const KEY_LEADER := -1
const KEY_LOCAL_LEADER := -2
const KEY_COMMAND := -3
const KEY_NULL := null

const KEY_CODES = {
	KEY_LEADER: "<leader>",
	KEY_LOCAL_LEADER: "<localleader>",
	KEY_NULL: "nul",
	KEY_ESCAPE: "esc",
	KEY_TAB: "tab",
	KEY_BACKTAB: "s-tab",
	KEY_BACKSPACE: "bs",
	KEY_ENTER: PoolStringArray(["cr", "enter", "return", "eol"]),
	KEY_KP_ENTER: PoolStringArray(["cr", "enter", "return", "eol"]),
	KEY_INSERT: "",
	KEY_DELETE: "del",
	KEY_PAUSE: "",
	KEY_PRINT: "",
	KEY_SYSREQ: "",
	KEY_CLEAR: "",
	KEY_HOME: "home",
	KEY_END: "end",
	KEY_LEFT: "left",
	KEY_UP: "up",
	KEY_RIGHT: "right",
	KEY_DOWN: "down",
	KEY_PAGEUP: "",
	KEY_PAGEDOWN: "",
	KEY_SHIFT: "s-",
	KEY_CONTROL: "c-",
	KEY_COMMAND: "c-", # for KEY_COMMAND which doesn't exist
	KEY_META: "m-",
	KEY_ALT: "a-",
	KEY_CAPSLOCK: "",
	KEY_NUMLOCK: "",
	KEY_SCROLLLOCK: "",
	KEY_F1: "f1",
	KEY_F2: "f2",
	KEY_F3: "f3",
	KEY_F4: "f4",
	KEY_F5: "f5",
	KEY_F6: "f6",
	KEY_F7: "f7",
	KEY_F8: "f8",
	KEY_F9: "f9",
	KEY_F10: "f10",
	KEY_F11: "f11",
	KEY_F12: "f12",
	KEY_F13: "f13",
	KEY_F14: "f14",
	KEY_F15: "f15",
	KEY_F16: "f16",
	KEY_KP_MULTIPLY: "kmultiply",
	KEY_KP_DIVIDE: "kdivide",
	KEY_KP_SUBTRACT: "kminus",
	KEY_KP_PERIOD: "kpoint",
	KEY_KP_ADD: "kplus",
	KEY_KP_0: "k0",
	KEY_KP_1: "k1",
	KEY_KP_2: "k2",
	KEY_KP_3: "k3",
	KEY_KP_4: "k4",
	KEY_KP_5: "k5",
	KEY_KP_6: "k6",
	KEY_KP_7: "k7",
	KEY_KP_8: "k8",
	KEY_KP_9: "k9",
	KEY_SUPER_L: "",
	KEY_SUPER_R: "",
	KEY_MENU: "",
	KEY_HYPER_L: "",
	KEY_HYPER_R: "",
	KEY_HELP: "",
	KEY_DIRECTION_L: "",
	KEY_DIRECTION_R: "",
	KEY_BACK: "",
	KEY_FORWARD: "",
	KEY_STOP: "",
	KEY_REFRESH: "",
	KEY_VOLUMEDOWN: "",
	KEY_VOLUMEMUTE: "",
	KEY_VOLUMEUP: "",
	KEY_BASSBOOST: "",
	KEY_BASSUP: "",
	KEY_BASSDOWN: "",
	KEY_TREBLEUP: "",
	KEY_TREBLEDOWN: "",
	KEY_MEDIAPLAY: "",
	KEY_MEDIASTOP: "",
	KEY_MEDIAPREVIOUS: "",
	KEY_MEDIANEXT: "",
	KEY_MEDIARECORD: "",
	KEY_HOMEPAGE: "",
	KEY_FAVORITES: "",
	KEY_SEARCH: "",
	KEY_STANDBY: "",
	KEY_OPENURL: "",
	KEY_LAUNCHMAIL: "",
	KEY_LAUNCHMEDIA: "",
	KEY_LAUNCH0: "",
	KEY_LAUNCH1: "",
	KEY_LAUNCH2: "",
	KEY_LAUNCH3: "",
	KEY_LAUNCH4: "",
	KEY_LAUNCH5: "",
	KEY_LAUNCH6: "",
	KEY_LAUNCH7: "",
	KEY_LAUNCH8: "",
	KEY_LAUNCH9: "",
	KEY_LAUNCHA: "",
	KEY_LAUNCHB: "",
	KEY_LAUNCHC: "",
	KEY_LAUNCHD: "",
	KEY_LAUNCHE: "",
	KEY_LAUNCHF: "",
	KEY_UNKNOWN: "",
	KEY_SPACE: "<space>",
	KEY_EXCLAM: "",
	KEY_QUOTEDBL: "",
	KEY_NUMBERSIGN: "",
	KEY_DOLLAR: "",
	KEY_PERCENT: "",
	KEY_AMPERSAND: "",
	KEY_APOSTROPHE: "",
	KEY_PARENLEFT: "",
	KEY_PARENRIGHT: "",
	KEY_ASTERISK: "",
	KEY_PLUS: "",
	KEY_COMMA: "",
	KEY_MINUS: "",
	KEY_PERIOD: "",
	KEY_SLASH: "",
	KEY_0: "",
	KEY_1: "",
	KEY_2: "",
	KEY_3: "",
	KEY_4: "",
	KEY_5: "",
	KEY_6: "",
	KEY_7: "",
	KEY_8: "",
	KEY_9: "",
	KEY_COLON: "",
	KEY_SEMICOLON: "",
	KEY_LESS: "<lt>",
	KEY_EQUAL: "",
	KEY_GREATER: "",
	KEY_QUESTION: "",
	KEY_AT: "",
	KEY_A: "",
	KEY_B: "",
	KEY_C: "",
	KEY_D: "",
	KEY_E: "",
	KEY_F: "",
	KEY_G: "",
	KEY_H: "",
	KEY_I: "",
	KEY_J: "",
	KEY_K: "",
	KEY_L: "",
	KEY_M: "",
	KEY_N: "",
	KEY_O: "",
	KEY_P: "",
	KEY_Q: "",
	KEY_R: "",
	KEY_S: "",
	KEY_T: "",
	KEY_U: "",
	KEY_V: "",
	KEY_W: "",
	KEY_X: "",
	KEY_Y: "",
	KEY_Z: "",
	KEY_BRACKETLEFT: "",
	KEY_BACKSLASH: "<bslash>",
	KEY_BRACKETRIGHT: "",
	KEY_ASCIICIRCUM: "",
	KEY_UNDERSCORE: "",
	KEY_QUOTELEFT: "",
	KEY_BRACELEFT: "",
	KEY_BAR: "<bar>",
	KEY_BRACERIGHT: "",
	KEY_ASCIITILDE: "",
	KEY_NOBREAKSPACE: "",
	KEY_EXCLAMDOWN: "",
	KEY_CENT: "",
	KEY_STERLING: "",
	KEY_CURRENCY: "",
	KEY_YEN: "",
	KEY_BROKENBAR: "",
	KEY_SECTION: "",
	KEY_DIAERESIS: "",
	KEY_COPYRIGHT: "",
	KEY_ORDFEMININE: "",
	KEY_GUILLEMOTLEFT: "",
	KEY_NOTSIGN: "",
	KEY_HYPHEN: "",
	KEY_REGISTERED: "",
	KEY_MACRON: "",
	KEY_DEGREE: "",
	KEY_PLUSMINUS: "",
	KEY_TWOSUPERIOR: "",
	KEY_THREESUPERIOR: "",
	KEY_ACUTE: "",
	KEY_MU: "",
	KEY_PARAGRAPH: "",
	KEY_PERIODCENTERED: "",
	KEY_CEDILLA: "",
	KEY_ONESUPERIOR: "",
	KEY_MASCULINE: "",
	KEY_GUILLEMOTRIGHT: "",
	KEY_ONEQUARTER: "",
	KEY_ONEHALF: "",
	KEY_THREEQUARTERS: "",
	KEY_QUESTIONDOWN: "",
	KEY_AGRAVE: "",
	KEY_AACUTE: "",
	KEY_ACIRCUMFLEX: "",
	KEY_ATILDE: "",
	KEY_ADIAERESIS: "",
	KEY_ARING: "",
	KEY_AE: "",
	KEY_CCEDILLA: "",
	KEY_EGRAVE: "",
	KEY_EACUTE: "",
	KEY_ECIRCUMFLEX: "",
	KEY_EDIAERESIS: "",
	KEY_IGRAVE: "",
	KEY_IACUTE: "",
	KEY_ICIRCUMFLEX: "",
	KEY_IDIAERESIS: "",
	KEY_ETH: "",
	KEY_NTILDE: "",
	KEY_OGRAVE: "",
	KEY_OACUTE: "",
	KEY_OCIRCUMFLEX: "",
	KEY_OTILDE: "",
	KEY_ODIAERESIS: "",
	KEY_MULTIPLY: "",
	KEY_OOBLIQUE: "",
	KEY_UGRAVE: "",
	KEY_UACUTE: "",
	KEY_UCIRCUMFLEX: "",
	KEY_UDIAERESIS: "",
	KEY_YACUTE: "",
	KEY_THORN: "",
	KEY_SSHARP: "",
	KEY_DIVISION: "",
	KEY_YDIAERESIS: ""
}

static func get_key_codes() -> Dictionary:
	return KEY_CODES

static func get_inverse_key_codes() -> Dictionary:
	var ret := {}
	var key_codes = get_key_codes()
	for a_key in key_codes:
		var value = key_codes[a_key]
		match typeof(value):
			TYPE_STRING:
				if not value:
					continue
				ret[value] = a_key
			TYPE_STRING_ARRAY:
				for a_elem in value:
					ret[a_elem] = a_key
			_:
				continue
	return ret